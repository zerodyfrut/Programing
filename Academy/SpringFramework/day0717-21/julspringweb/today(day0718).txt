<<프로젝트 생성, 설정 및 확인>>

1. 프로젝트 생성
main클래스에 어노테이션 추가

@ComponentScan(basePackages ="com.example")

2. application.properties파일 설정정보 추가
server.port=8081
(한글 작성x)

3. controller 생성
패키지  com.example.controller

[HelloController .java]
package com.example.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
public class HelloController {

    @GetMapping("/hello")
    @ResponseBody
    public String hello(){
        return "hello spring!";
    }

}

4. view 생성
[static/index.html]
<h1>인덱스 페이지 입니다.</h1>

5. 실행
localhost:8081
localhost:hello


<<컨트롤러 생성 및 view 생성>>
요청uri - 컨트롤러 - view

1. 컨트롤러 지정
@Controller
클래스


2. 
@Get/PostMapping("요청uri")
메서드

URL
protocol:// ip(domain):port/path?query(name=value)#id
/path == 요청uri
(찾아서 메서드를 실행)

/test/hello -> HelloController - hello()
/test/hello2 -> HelloController - hello2()
-> 공통되는 부분(test)는 클래스에 만듬


3. 
view 페이지가 있다면,
메서드 리턴타입 : String 
리턴 값 = 뷰의 경로 (templates의 하위 폴더부터 파일명까지 입력)


4. 
view에 보낼 데이터가 있다면,
Model에 저장
모델데이터 : 이름 - 값 으로 구성
view에서는 타임리프를 이용해 출력

---
<<Error 상태코드>>
200 : 정상 처리
400 : 잘못된 파라미터 값
404 : 경로 에러, 해당 경로에 맞는 리소스나 파일이 없음
500 : 실행 중 에러



---
@RequestParam
요청을 처리하는 메소드의 매개변수에 붙는다.(ex Mapping)

@RequestParam 
(value="파라미터 이름",
defaultValue="기본값",
required=false)

@RequestParam 매개변수
@RequestParam ("파라미터 이름") 매개변수
@RequestParam (value="파라미터 이름",defaultValue="기본값") 기본형 매개변수



---

MVC 패턴 
spring MVC 동작 방식
@Controller
@GetMapping("path")
@PostMapping("path")

파라미터값 받아오기
command 객체
@RequestParam

@ModelAttribute


---
실습 1)
Get : /a AController -a() -a/a.html
화면에 a.html 문서 실행중 출력


GET : article/newArticle -> form 화면 출력
                            form에 데이터 입력 후 전송 버튼 클릭

                            post 방식으로 데이터 전송
                            article/newArticle
POST : article/newArticle : 파라미터 저장, view에서 출력


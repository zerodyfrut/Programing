
07/16

객체지향 설계 원칙 (SOLID) 
 S(단일 책임 원칙): 클래스는 하나의 책임만 가져야 함 
 O(개방-폐쇄 원칙): 확장에는 열려있고, 수정에는 닫혀있어야 함 
        기능 추가시, 기존 코드를 고치지않고, 새로운 클래스를 추가하여 확장
 L(리스코프 치환 원칙): 하위 타입은 상위 타입을 대체할 수 있어야 함 
 I(인터페이스 분리 원칙): 클라이언트는 사용하지 않는 인터페이스에 의존하지 않아야 함 
 D(의존관계 역전 원칙): 고수준 모듈은 저수준 모듈에 의존하지 않아야 함


autowire="byType"
- 변수 타입에 맞춰 컨테이너가 가지고있는 bean 주입

같은 타입의 bean이 여러개 있으면 에러,
해당 타입의 bean이 없다면 자손타입의 bean 주입


빈/ 컨테이너
DI
@autowired / @value
빈 빈스캔, 빈 생성(5가지)

@Autowired | @Value("값")
변수 선언

빈 생성
component-scan  base-package="패키지명|상위패키지명"
@Component = 일반
@Reopsitory = dao 용도
@Service
@controller
클래스

빈 생성후 @Autowired 등의 어노테이션 진행

@PostConstruct : 초기화 시점에 자동으로 동작
메서드

@preDestroy : 소멸 시점에 자동으로 동작
메서드

@Configuration : 우리가 선언한 클래스 말고 api에서 제공하는 클래스를 
클래스            bean으로 만들 때 사용
@Bean : 리턴한 객체를 bean으로 등록됨
메서드
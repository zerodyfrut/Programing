<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:aop="http://www.springframework.org/schema/aop" 
xmlns:p="http://www.springframework.org/schema/p" 
xmlns:context="http://www.springframework.org/schema/context" 
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context.xsd 
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop.xsd">


<aop:aspectj-autoproxy/>
<context:component-scan base-package="spring.aop"/>


<!-- <bean id="greeting" class="spring.aop.GreetingServiceImpl" p:greeting="안녕"/> -->

<!-- aspect bean -->
<!-- <bean id="logAspect" class="spring.aop.LogAspect"/>
<bean id="performanceAspect" class="spring.aop.PerformanceAspect"/> -->

<!-- aop config -->
<!-- <aop:config proxy-target-class="true">
    <aop:pointcut id="public" expression="execution(public * *(..))"/>
    <aop:aspect ref="performanceAspect">
        <aop:around pointcut-ref="public" method="timeCheck"/> -->
        <!-- 뭔가메서드 앞뒤로 실행된다기 보단 메서드를 aspect에 끼워넣는 느낌임. -->
    <!-- </aop:aspect> -->
    <!-- <aop:aspect ref="logAspect">
        <aop:before pointcut-ref="public" method="beforeLogging"/>
        <aop:after-returning pointcut-ref="public" method="afterLogging" returning="returnValue"/>
        <aop:after pointcut-ref="public" method="alwayLogging"/>
        <aop:after-throwing pointcut="execution(public * *(..))" method="throwingLogging" throwing="e"/>
    </aop:aspect> -->
<!-- </aop:config>  -->
    



</beans>
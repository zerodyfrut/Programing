[memos.py]
#pip install pymysql
from flask import Flask, render_template, request, redirect, url_for
import pymysql

app = Flask(__name__)

db_config = {
    'host':'localhost',     
    'port':3306,
    'user':"pytest",         
    'password':"pytest",  
    'db':"memo_app" 
    }

def get_db_connection():
    return pymysql.connect(**db_config)


@app.route('/')
def index():
    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM memos ORDER BY created_at DESC")
    memos = cursor.fetchall()
    cursor.close()
    conn.close()
    return render_template('memos/index.html', memos=memos)

@app.route('/add', methods=['GET', 'POST'])
def add():
    if request.method == 'POST':
        title = request.form['title']
        content = request.form['content']
        conn = get_db_connection()
        cursor = conn.cursor()
        cursor.execute("INSERT INTO memos (title, content) VALUES (%s, %s)", (title, content))
        conn.commit()
        cursor.close()
        conn.close()
        return redirect(url_for('index'))
    return render_template('memos/add.html')

@app.route('/edit/<int:memo_id>', methods=['GET', 'POST'])
def edit(memo_id):
    conn = get_db_connection()
    cursor = conn.cursor()

    if request.method == 'POST':
        title = request.form['title']
        content = request.form['content']
        cursor.execute("UPDATE memos SET title=%s, content=%s WHERE id=%s", (title, content, memo_id))
        conn.commit()
        cursor.close()
        conn.close()
        return redirect(url_for('index'))

    cursor.execute("SELECT * FROM memos WHERE id=%s", (memo_id,))
    memo = cursor.fetchone()
    cursor.close()
    conn.close()
    return render_template('memos/edit.html', memo=memo)


# 메모 삭제
@app.route('/delete/<int:memo_id>')
def delete(memo_id):
    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM memos WHERE id=%s", (memo_id,))
    conn.commit()
    cursor.close()
    conn.close()
    return redirect(url_for('index'))

if __name__ == "__main__":
    app.run(debug=True)

---------templates폴더 ------------------------------

[memos/index.html]


<!DOCTYPE html>
<html>
<head>
    <title>메모 앱</title>
</head>
<body>
    <h1>메모 목록</h1>
    <a href="{{ url_for('add') }}">+ 새 메모 추가</a>
    <ul>
        {% for memo in memos %}
        <li>
            <strong>{{ memo[1] }}</strong> - {{ memo[3] }}
            <p>{{ memo[2] }}</p>
            <a href="{{ url_for('edit', memo_id=memo[0]) }}">수정</a> |
            <a href="{{ url_for('delete', memo_id=memo[0]) }}">삭제</a>
        </li>
        {% endfor %}
    </ul>
</body>
</html>




[memos/add.html]


<!DOCTYPE html>
<html>
<head>
    <title>새 메모 추가</title>
</head>
<body>
    <h1>새 메모 추가</h1>
    <form method="POST">
        <input type="text" name="title" placeholder="제목" required><br>
        <textarea name="content" placeholder="내용" required></textarea><br>
        <button type="submit">저장</button>
    </form>
    <a href="{{ url_for('index') }}">← 목록으로</a>
</body>
</html>




[memos/edit.html]

<!DOCTYPE html>
<html>
<head>
    <title>메모 수정</title>
</head>
<body>
    <h1>메모 수정</h1>
    <form method="POST">
        <input type="text" name="title" value="{{ memo[1] }}" required><br>
        <textarea name="content" required>{{ memo[2] }}</textarea><br>
        <button type="submit">수정 완료</button>
    </form>
    <a href="{{ url_for('index') }}">← 목록으로</a>
</body>
</html>
